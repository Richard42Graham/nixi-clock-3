#pragma once
#ifndef API_H_INCLUDED
#define API_H_INCLUDED

#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include <string.h>
#include <math.h>

#include <fcntl.h>     // open bus file
#include <sys/ioctl.h> // to open I2C device
#include <unistd.h>    // read/write to i2c device,
#include <linux/i2c-dev.h>
#include <sys/types.h>
#include <linux/i2c-dev.h>
// Terrible portability hack between arm-linux-gnueabihf-gcc on Mac OS X and native gcc on raspbian.
#ifndef I2C_M_RD
#include <linux/i2c.h>
#endif

typedef struct digit digit;
struct digit
{
    char chip;
    char adress;
};
static const char chips[] = { 0x40,0x41,0x42,0x43,0x44,0x45 };
//			       0             1           2	       3	      4		    5	         6	     7		  8	       9	  .L		.R
static digit tubes[7][12] = {
    {{0x40, 0x0d}, {0x40, 0x15}, {0x40, 0x19}, {0x40, 0x1d}, {0x40, 0x21}, {0x40, 0x25}, {0x40, 0x29}, {0x40, 0x2d}, {0x40, 0x31}, {0x40, 0x35}, {0x40, 0x11}, {0x40, 0x09}}, // H _:_ _ : _ _ : _
    {{0x41, 0x21}, {0x41, 0x2D}, {0x40, 0x45}, {0x40, 0x41}, {0x40, 0x30}, {0x40, 0x39}, {0x41, 0x11}, {0x41, 0x15}, {0x41, 0x19}, {0x41, 0x1d}, {0x41, 0x29}, {0x41, 0x25}}, // _ H : _ _ : _ _ : _
    {{0x41, 0x41}, {0x41, 0x39}, {0x41, 0x35}, {0x41, 0x31}, {0x41, 0x09}, {0x41, 0x0d}, {0x42, 0x35}, {0x42, 0x41}, {0x42, 0x2d}, {0x42, 0x29}, {0x41, 0x3d}, {0x41, 0x45}}, // _ _ : M _ : _ _ : _
    {{0x42, 0x0d}, {0x42, 0x21}, {0x42, 0x1d}, {0x42, 0x19}, {0x42, 0x15}, {0x42, 0x11}, {0x42, 0x39}, {0x42, 0x3d}, {0x42, 0x41}, {0x42, 0x45}, {0x42, 0x25}, {0x42, 0x0d}}, // _ _ : _ M : _ _ : _
    {{0x00, 0x00}, {0x43, 0x29}, {0x43, 0x11}, {0x43, 0x25}, {0x43, 0x1d}, {0x43, 0x19}, {0x43, 0x15}, {0x43, 0x09}, {0x43, 0x35}, {0x43, 0x31}, {0x43, 0x21}, {0x43, 0x0d}}, // _ _ : _ _ : S _ : _
    {{0x43, 0x41}, {0x43, 0x3D}, {0x44, 0x11}, {0x44, 0x25}, {0x44, 0x1d}, {0x44, 0x19}, {0x44, 0x15}, {0x43, 0x39}, {0x44, 0x29}, {0x43, 0x45}, {0x44, 0x21}, {0x44, 0x0d}}, // _ _ : _ _ : _ S : _
    {{0x45, 0x3d}, {0x45, 0x35}, {0x45, 0x0d}, {0x45, 0x21}, {0x45, 0x19}, {0x45, 0x15}, {0x45, 0x11}, {0x45, 0x39}, {0x45, 0x45}, {0x45, 0x41}, {0x45, 0x1d}, {0x45, 0x09}}  // _ _ : _ _ : _ _ : D
};

int open_i2c_bus(char bus[]);
int init(int fd);
int close_i2c_bus(int fd);

int read_reg(int fd, u_int8_t device_address, u_int8_t reg, char *output);
int write_reg(int fd, u_int8_t device_address, u_int8_t reg, char input);
int set_digit(int fd,digit digi,char value);
#endif